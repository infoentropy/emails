import csv, re
from hbemail.utils import iterable
from jinja2 import (
BaseLoader,
Environment,
FunctionLoader,
Template,
select_autoescape,
)
csvfile = open('./scripts/year_in_review_emails-2019_personalized_stats-eec44cfae2d0-2019-12-13-18-16-01.csv', 'r')
reader = csv.DictReader(csvfile)

LAYOUT_TEMPLATE = """
{{#assign "styles"}}
<style type="text/css">
h1,div,p { Margin:0; padding:0; }
.section { color:#ffffff; font-family: 'Avenir Next', Arial, sans-serif; Margin:5px auto; max-width:500px;}
.yir { padding:30px 32px 10px 32px; }
.section h1.title { font-size:30px; Margin-bottom:30px;}
.section1 { background-color:#60B4E7;}
.section2 { background-color:#619FE5;}
.section3 { background-color:#628BE4;}
.section4 { background-color:#6376E2;}
.section5 { background-color:#6461E0;}

.metric { Margin-bottom:60px; }

.metric.minimargin { Margin-bottom:10px; }
.metric.nomargin { Margin-bottom:0px; }

.metric .title { text-transform:uppercase; font-size:12px; letter-spacing:1px; Margin-bottom:10px;}
.metric .value { font-size:26px; line-height:30px;}
.calendar.metric .title { display:inline-block;  width:46px; Margin-bottom:0;}
.calendar.metric .value { display:inline-block; font-size:12px; line-height:14px; }
.bigimage.metric td.image { width:90px;}
.metric a { text-decoration:none; color:#ffffff;}
</style>
<style type="text/css">
@media only screen and (min-width:500px) {
}
</style>
{{/assign}}
{{{ snippet "wrapper - open promocard" button_color="calm-blue blue green" promocard=styles }}}

{{#assign "image"}}https://d15k2d11r6t6rl.cloudfront.net/public/users/Integrators/669d5713-9b6a-46bb-bd7e-c542cff6dd6a/b215951a136f423a9cbb19359fcccb0a/year%20in%20review/2019_Header_2x.png{{/assign}}
{{#assign "title"}}{{/assign}}
{{#assign "body"}}{{/assign}}
{{#assign "description"}}Your Year of Calm 2019{{/assign}}
{{#assign "link"}}https://www.calm.com{{/assign}}
{{#assign "imagestyle"}}{{/assign}}
{{{ snippet 'component - image with optional text' image=image title=title body=body description=description link=link imagestyle=imagestyle }}}

{% block content %}{% endblock %}


{{{ snippet "wrapper - close" }}}
"""

INDEX_TEMPLATE = """
{{!-- Generated by Script --}}
{% extends "layout.html" %}
{% block content %}
{% for sesstype, icon in YIR_SESSION_ICONS.items() %}
{{#eq sess_type_most_freq "_{{sesstype}}_"}}{{#assign "sess_type_most_freq_icon"}}_{{icon}}_{{/assign}}{{/eq}}
{{#eq try_this_sess_type "_{{sesstype}}_"}}{{#assign "try_this_sess_type_icon"}}_{{icon}}_{{/assign}}{{/eq}}
{% endfor %}

{% for key, icon in YIR_SLEEP_GENRE_ICONS.items() %}
{{#eq sleep_story_genre_most_freq "_{{key}}_"}}{{#assign "sleep_story_genre_most_freq_icon"}}_{{icon}}_{{/assign}}{{/eq}}{% endfor %}
{% for key, icon in YIR_TIME_ICONS.items() %}
{{#eq time_of_day_most_freq "_{{key}}_"}}{{#assign "time_of_day_most_freq_icon"}}_{{icon}}_{{/assign}}{{/eq}}{% endfor %}

{{#catalog "Localization" "yearinreview" as |translations| }}
{{#lookup translations active_language as |text| }}

{% for section in data_layout %}
{{!-- START SECTION ("_{{section.title.default}}_") --}}
{% if section.title.lookup %}
{{#assign "_title"}}{{#lookup _{{section.title.lookup}}_ as |lookuptitle|}}{{lookuptitle}}{{/lookup}}{{/assign}}
{{_title}}
{% else %}
{{#assign "_title"}}{{ text._{{section.title.keyname}}_ }}{{/assign}}
{% endif %}
<div class="section _{{section.css_class}}_" style="max-width:500px;">
    <div class="yir">
        <div><h1 class="title">{{{ defaultIfEmpty _title "_{{section.title.default}}_" }}}</h1></div>
        <div class="body">

{% for metric in section.get('data', []) %}
{{!-- _{{ metric.variable }}_ --}}

{{#lookup text {% if metric.title.lookup %}_{{ metric.title.lookup }}_{%else%}"_{{metric.title.keyname}}_" {%endif%} as |_metricTitle|}}
{{#assign "metricTitle"}}{{{ defaultIfEmpty _metricTitle  "_{{metric.title.default}}_" }}}{{/assign}}
{% if 'NNN' in metric.title.default %}
{{#assign "metricTitle"}}{{ replace metricTitle "NNN" _{{metric.title.value}}_ }}{{/assign}}
{% endif %}
{{/lookup}}

{% if metric.lookup %}{% if metric.lookup == metric.variable %}
{{#assign "metricValue"}}{{#lookup text _{{metric.variable}}_ as |word| }}{{word}}{{/lookup}}{{/assign}}
{% else %}
{{#assign "_metricValue"}}{{text._{{metric.lookup}}_}}{{/assign}}
{{#assign "metricValue"}}{{ replace _metricValue "NNN" _{{metric.variable}}_ }}{{/assign}}
{% endif %}
{% else %}
{{#assign "metricValue"}}{{ _{{ metric.variable }}_ }}{{/assign}}
{% endif %}
{{{ snippet "yir metric" icon=_{{ metric.icon or "''"}}_ icon_shape="_{{metric.icon_shape}}_" metrictitle=metricTitle value=metricValue url=_{{metric.url or '""'}}_ css_class="_{{metric.css_class}}_" }}}
{% endfor %}

        </div>
    </div>
</div>
{{!-- END SECTION ("_{{section.title.default}}_") --}}
{% endfor %}
{{/lookup}}
{{/catalog}}

{% endblock %}
"""

def load_template(name):
    if name == "layout.html":
        return LAYOUT_TEMPLATE
    if name == "index.html":
        return INDEX_TEMPLATE
    return None

env = Environment(
    variable_start_string="_{{",
    variable_end_string="}}_",
    comment_start_string="_{#",
    comment_end_string="#}_",
    loader=FunctionLoader(load_template))
TEMPLATE_SECTION = env.get_template("index.html")
TEMPLATE_ID = 1308659

IMAGE_FOLDER = "https://d15k2d11r6t6rl.cloudfront.net/public/users/Integrators/669d5713-9b6a-46bb-bd7e-c542cff6dd6a/b215951a136f423a9cbb19359fcccb0a/section%20icons/"
YIR_IMAGE_FOLDER = "https://d15k2d11r6t6rl.cloudfront.net/public/users/Integrators/669d5713-9b6a-46bb-bd7e-c542cff6dd6a/b215951a136f423a9cbb19359fcccb0a/year%20in%20review/"
YIR_SESSION_ICONS = {
    "body":YIR_IMAGE_FOLDER + "calm-body.png",
    "breathe":YIR_IMAGE_FOLDER + "breathe.png",
    "":YIR_IMAGE_FOLDER + "Sleep_1x.png",
    "masterclass":YIR_IMAGE_FOLDER + "Masterclasses_1x.png",
    "meditation":YIR_IMAGE_FOLDER + "Meditate_1x.png",
    "music":YIR_IMAGE_FOLDER + "Music_1x.png",
    "sleep_story":YIR_IMAGE_FOLDER + "Sleep_1x.png",
}

YIR_TIME_ICONS = {
    "morning":YIR_IMAGE_FOLDER + "Clock_1x.png",
    "afternoon":YIR_IMAGE_FOLDER + "Clock_1x.png",
    "evening":YIR_IMAGE_FOLDER + "Clock_1x.png",
    "middle_night":YIR_IMAGE_FOLDER + "Clock_1x.png",
    "":YIR_IMAGE_FOLDER  + "Clock_1x.png"
}

YIR_SLEEP_GENRE_ICONS = {
    "Fiction":YIR_IMAGE_FOLDER + "fiction.png",
    "Nonfiction":YIR_IMAGE_FOLDER + "nonfiction.png",
    "Nature":YIR_IMAGE_FOLDER + "nature.png",
    "Naps":YIR_IMAGE_FOLDER + "naps.png",
}

BOOL_VARS = {
    'had_one_plus_sessions',
    'had_one_plus_sleep_stories',
    'had_one_plus_music_minutes',
    'is_german'
}

INT_VARS = {
    'n_sess_type_most_freq',
    'music_minutes',
    'n_sleep_story_genre_most_freq',
    'n_sess_most_freq_sleep_story_narrator',
    'n_sess_most_freq_sleep_story_title',
}

year_in_review_sections = [
    {
        "title": {
            "default":"Your Year of Calm",
            "keyname": "sectiontitle_yearofcalm",
        },
        "css_class":"section1",
        "style": {
            "bg_color":"#000000",
            "bg_image":"",
            "color":"#ffffff",
        },
        "data":[
            {
                "title":{
                    "default":"Your Calm Go-to",
                    "keyname":"metricMostFreq",
                    "value":"sess_type_most_freq",
                },
                "variable":"sess_type_most_freq",
                "lookup":"sess_type_most_freq",
                "icon": "\"%s%s\"" % (YIR_IMAGE_FOLDER, "Heart_1x.png"),
                "icon_shape":"square",
            },
            {
                "title":{
                    "default":"Your Sessions",
                    "keyname":"sess_type_most_freq",
                    "value":"sess_type_most_freq",
                    "lookup":"sess_type_most_freq",
                },
                "variable":"n_sess_type_most_freq",
                "icon":"sess_type_most_freq_icon",
                "icon_shape":"circle",
                "lookup":'numtimes',
            },
            ]
    },
    {
        "title": {
            "default":"Your Calm Time",
            "keyname": "sectiontitle_calmtime",
        },
        "css_class":"section2",
        "icon":"square",
        "style": {
            "bg_color":"#666666",
            "bg_image":"",
            "color":"#ffffff",
        },
        "data":[
            {
                "title":{
                    "default":"Most Mindful Time of the Day",
                    "keyname":"metricMostCommonTime",
                    "value":"time_of_day_most_freq"
                },
                "variable":"time_of_day_most_freq",
                "lookup":"time_of_day_most_freq",
                "icon": "time_of_day_most_freq_icon",
                "icon_shape":"square",
            },
            {
                "title":{
                    "default":"Most Common Day you Chose Calm",
                    "keyname":"metricMostCommonDay",
                    "value":"day_of_week_most_freq"
                },
                "variable":"day_of_week_most_freq",
                "icon": "\"%s%s\"" % (YIR_IMAGE_FOLDER, "Calendar_1x.png"),
                "icon_shape":"square",
                "css_class":"minimargin",
            },
            {
                "title":{
                    "default":"SUN",
                    "keyname":"sunday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_sun",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"MON",
                    "keyname":"monday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_mon",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"TUE",
                    "keyname":"tuesday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_tue",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"WED",
                    "keyname":"wednesday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_wed",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"THU",
                    "keyname":"thursday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_thu",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"FRI",
                    "keyname":"friday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_fri",
                "icon": "",
                "css_class": "calendar nomargin",
            },
            {
                "title":{
                    "default":"Sat",
                    "keyname":"saturday",
                    "value":""
                },
                "variable":"viz_n_day_of_week_sat",
                "icon": "",
                "css_class": "calendar",
            },
            ]
    },
    {
        "title": {
            "default":"Bedtime with Calm",
            "keyname": "sectiontitle_bedtime",
        },
        "css_class":"section3",
        "style": {
            "bg_color":"#999999",
            "bg_image":"",
            "color":"#ffffff",
        },
        "data":[
            {
                "title":{
                    "default":"Favorite Sleep Story",
                    "keyname":"metricFavSleep",
                    "value":"n_sess_most_freq_sleep_story_title"
                },
                "variable":"most_freq_sleep_story_title",
                "icon":"most_freq_sleep_story_icon_url",
                "icon_shape":"rounded",
                "url":"most_freq_sleep_story_program_url",
                "css_class": "bigimage minimargin",
            },
            {
                "title":{
                    "default":"Which took you to dreamland",
                    "keyname":"metricFavSleepCount",
                    "value":"n_sess_most_freq_sleep_story_title"
                },
                "variable":"n_sess_most_freq_sleep_story_title",
                "icon":"",
                "icon_shape":"",
                "css_class": "bigimage",
                "lookup": 'numtimes'
            },
            {
                "title":{
                    "default":"Favorite Sleep Story Narrator",
                    "keyname":"metricFavNarrator",
                    "variable":"sleep_story_genre_most_freq"
                },
                "variable":"most_freq_sleep_story_narrator",
                "icon":"narrator_headshot_url",
                "icon_shape":"circle",
                "url":"narrator_url",
                "css_class": "bigimage minimargin",
            },
            {
                "title":{
                    "default":"Who lulled you to sleep",
                    "keyname":"metricFavNarratorCount",
                    "value":"n_sess_most_freq_sleep_story_narrator"
                },
                "variable":"n_sess_most_freq_sleep_story_narrator",
                "icon":"",
                "icon_shape":"circle",
                "css_class": "bigimage",
                "lookup": 'numtimes'
            },
            {
                "title":{
                    "default":"Favorite Sleep Story Genre",
                    "keyname":"metricFavSleepGenre",
                    "value":"sleep_story_genre_most_freq"
                },
                "variable":"sleep_story_genre_most_freq",
                "icon":"sleep_story_genre_most_freq_icon",
                "icon_shape":"circle",
                "css_class": "bigimage minimargin",
            },
            {
                "title":{
                    "default":"You Listened",
                    "keyname":"metricFavSleepGenreCount",
                    "value":"try_this_sess_type"
                },
                "variable":"n_sleep_story_genre_most_freq",
                "icon": "",
                "icon_shape":"circle",
                "css_class": "bigimage",
                "lookup": 'numtimes'
            },
            ]
    },
    {
        "title": {
            "default":"Yours to Discover",
            "keyname": "sectiontitle_discover",
        },
        "css_class":"section4",
        "style": {
            "bg_color":"#aaaaaa",
            "bg_image":"",
            "color":"#ffffff",
        },
        "data":[
            {
                "title":{
                    "default":"NNN",
                    "keyname":"metricTrySession",
                    "value":"try_this_sess_type"
                },
                "variable":"try_this_sess_type_guide_title",
                "icon":"try_this_sess_type_icon",
                "icon_shape":"circle",
                "url":"try_this_sess_type_program_url",
                "css_class": "bigimage",
            },
            {
                "title":{
                    "default":"NNN",
                    "keyname":"metricTrySleep",
                    "value":"try_this_sleep_story_genre"
                },
                "variable":"try_this_sleep_story_genre_guide_title",
                "icon":"try_this_sleep_story_genre_icon_url",
                "icon_shape":"circle",
                "url":"try_this_sleep_story_genre_program_url",
                "css_class": "bigimage",
            },
            ]
    },
]



# return a Templated string suitable for stuffing user's data
TEMPLATE_SKELETON = TEMPLATE_SECTION.render(
    data_layout = year_in_review_sections,
    YIR_SESSION_ICONS=YIR_SESSION_ICONS,
    YIR_SLEEP_GENRE_ICONS=YIR_SLEEP_GENRE_ICONS,
    YIR_TIME_ICONS=YIR_TIME_ICONS,
    )
htmlfile = open('./scripts/sample.html', 'w')
htmlfile.write(TEMPLATE_SKELETON)
htmlfile.close()

TEMPLATE_ID = 1308659
response = iterable('/templates/email/update', data={"templateId":TEMPLATE_ID, "html":TEMPLATE_SKELETON})
print(response)
# def convert_data(data):
#     temp = {}
#     d = None
#     for k,v in recipient.items():
#         if v and k in INT_VARS:
#              d = int(v)
#         elif k in BOOL_VARS:
#             d = bool(v)
#         else:
#             d = v
#         temp[k] = d
#     return temp
#
# data_template = Template(TEMPLATE_SKELETON)
#
# userupdates = []
# # Simulate Iterable render step.
# for recipient in reader:
#     # convert data
#     data = convert_data(recipient)
#     updata = {"email":recipient['email'], "dataFields": {"yirv2019":data}}
#     userupdates.append(updata)
#     output = data_template.render(**data).replace('[[[', '{{{',).replace(']]]', '}}}').replace('[[', '{{',).replace(']]', '}}')
#     htmlfile = open('./scripts/%s.html' % (recipient.get('name','na') ), 'w')
#     htmlfile.write(output)
#     htmlfile.close()
#
#
# response = iterable('/users/bulkUpdate', data={"users":userupdates})
